// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Link {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  description String
  url         String
  postedBy    User?    @relation(fields: [postedById], references: [id], onDelete: Cascade)
  postedById  Int?
  votes       Vote[]
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  username    String   @unique
  password    String
  links       Link[]
  votes       Vote[]
  quizzes     Quiz[]
  taken       Taken[]
}

model Vote {
  id          Int     @id @default(autoincrement())
  link        Link    @relation(fields: [linkId], references: [id], onDelete: Cascade)
  linkId      Int
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int

  @@unique([linkId, userId])
}

model Quiz {
  id            Int         @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  title         String
  description   String
  published     Boolean
  questions     Question[]
  endings       Result[]
  ownedBy       User?       @relation(fields: [ownedById], references: [id], onDelete: Cascade)
  ownedById     Int?
}

model Question {
  id            Int       @id @default(autoincrement())
  content       String
  choices       Choice[]
  ownedBy       Quiz?     @relation(fields: [ownedById], references: [id], onDelete: Cascade)
  ownedById     Int?
}

model Choice {
  id            Int       @id @default(autoincrement())
  content       String
  result        Result? @relation(fields: [resultId], references: [id])
  resultId      Int?
  value         Int
  ownedBy       Question? @relation(fields: [ownedById], references: [id], onDelete: Cascade)
  ownedById     Int?
}

model Result {
  id                Int       @id @default(autoincrement())
  name              String
  description       String
  choices           Choice[]
  ownedBy           Quiz?   @relation(fields: [ownedById], references: [id], onDelete: Cascade)
  ownedById         Int?
}

model Taken {
  id                Int       @id @default(autoincrement())
  quizId            Int
  quizName          String
  name              String
  description       String
  score             Float
  others            Others[]
  ownedBy           User?   @relation(fields: [ownedById], references: [id], onDelete: Cascade)
  ownedById         Int?
}

model Others {
  id                Int       @id @default(autoincrement())
  name              String
  description       String
  score             Float
  ownedBy           Taken? @relation(fields: [ownedById], references: [id], onDelete: Cascade)
  ownedById         Int?
}